{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\carlo\\\\Downloads\\\\CodePills-ReactChat-main\\\\front\\\\src\\\\components\\\\Cifrar.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport CryptoJS from 'crypto-js';\nimport '../Style/style.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Cifrar() {\n  _s();\n  const [file, setFile] = useState(null);\n  const [text, setText] = useState('');\n  const [password, setPassword] = useState('');\n  const [decryptedText, setDecryptedText] = useState('');\n  const leerDes = event => {\n    const {\n      files\n    } = event.target;\n    if (files.length > 0) {\n      const selectedFile = files[0];\n      setFile(selectedFile);\n      const reader = new FileReader();\n      reader.onload = e => {\n        const fileText = e.target.result;\n        setText(fileText);\n      };\n      reader.readAsText(selectedFile);\n    }\n  };\n  const cifraDes = () => {\n    if (password.length !== 8) {\n      alert('La clave debe tener 8 caracteres');\n      return;\n    }\n    const encryptedText = CryptoJS.DES.encrypt(text, password).toString();\n    descargarArchivo(encryptedText, 'TextoCifrado.txt');\n  };\n  const descifraDes = () => {\n    if (password.length !== 8) {\n      alert('La clave debe tener 8 caracteres');\n      return;\n    }\n    const decryptedBytes = CryptoJS.DES.decrypt(text, password);\n    const decryptedText = decryptedBytes.toString(CryptoJS.enc.Utf8);\n    descargarArchivo(decryptedText, 'TextoDescifrado.txt');\n  };\n  const descargarArchivo = (contenido, nombreArchivo) => {\n    const blob = new Blob([contenido], {\n      type: 'text/plain'\n    });\n    const url = URL.createObjectURL(blob);\n    const a = document.createElement('a');\n    a.href = url;\n    a.download = nombreArchivo;\n    document.body.appendChild(a);\n    a.click();\n    URL.revokeObjectURL(url);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"papu\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"messi\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"CIFRADO DES\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Ayala Gomez NIcolas I\\xF1aki\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Carlos Emilio Manzano Solis\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"nico\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Selecciona un archivo de texto:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          id: \"archivodes\",\n          onChange: leerDes,\n          className: \"carlos\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Ingresar clave:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          value: password,\n          onChange: e => setPassword(e.target.value),\n          placeholder: \"Solo 8 caracteres!\",\n          maxLength: \"8\",\n          minLength: \"8\",\n          className: \"pepe\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"botones\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"form-control\",\n            type: \"button\",\n            id: \"button\",\n            value: \"Cifrar\",\n            onClick: cifraDes,\n            style: {\n              marginRight: '1.5rem'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"form-control\",\n            type: \"button\",\n            id: \"button\",\n            value: \"Descifrar\",\n            onClick: descifraDes,\n            style: {\n              marginRight: '1.5rem'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"reset\",\n            id: \"button\",\n            value: \"Limpiar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 9\n  }, this);\n}\n_s(Cifrar, \"/kzlUsd5SBJqBpCQevlOlyX8ioA=\");\n_c = Cifrar;\nvar _c;\n$RefreshReg$(_c, \"Cifrar\");","map":{"version":3,"names":["React","useState","CryptoJS","Cifrar","file","setFile","text","setText","password","setPassword","decryptedText","setDecryptedText","leerDes","event","files","target","length","selectedFile","reader","FileReader","onload","e","fileText","result","readAsText","cifraDes","alert","encryptedText","DES","encrypt","toString","descargarArchivo","descifraDes","decryptedBytes","decrypt","enc","Utf8","contenido","nombreArchivo","blob","Blob","type","url","URL","createObjectURL","a","document","createElement","href","download","body","appendChild","click","revokeObjectURL","value","marginRight"],"sources":["C:/Users/carlo/Downloads/CodePills-ReactChat-main/front/src/components/Cifrar.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport CryptoJS from 'crypto-js';\r\nimport '../Style/style.css';\r\n\r\n\r\nexport default function Cifrar() {\r\n    const [file, setFile] = useState(null);\r\n    const [text, setText] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [decryptedText, setDecryptedText] = useState('');\r\n\r\n    const leerDes = (event) => {\r\n        const { files } = event.target;\r\n        if (files.length > 0) {\r\n            const selectedFile = files[0];\r\n            setFile(selectedFile);\r\n\r\n            const reader = new FileReader();\r\n            reader.onload = (e) => {\r\n                const fileText = e.target.result;\r\n                setText(fileText);\r\n            };\r\n            reader.readAsText(selectedFile);\r\n        }\r\n    };\r\n\r\n    const cifraDes = () => {\r\n        if (password.length !== 8) {\r\n            alert('La clave debe tener 8 caracteres');\r\n            return;\r\n        }\r\n\r\n        const encryptedText = CryptoJS.DES.encrypt(text, password).toString();\r\n        descargarArchivo(encryptedText, 'TextoCifrado.txt');\r\n    };\r\n\r\n    const descifraDes = () => {\r\n        if (password.length !== 8) {\r\n            alert('La clave debe tener 8 caracteres');\r\n            return;\r\n        }\r\n\r\n        const decryptedBytes = CryptoJS.DES.decrypt(text, password);\r\n        const decryptedText = decryptedBytes.toString(CryptoJS.enc.Utf8);\r\n        descargarArchivo(decryptedText, 'TextoDescifrado.txt');\r\n    };\r\n\r\n    const descargarArchivo = (contenido, nombreArchivo) => {\r\n        const blob = new Blob([contenido], { type: 'text/plain' });\r\n        const url = URL.createObjectURL(blob);\r\n        const a = document.createElement('a');\r\n        a.href = url;\r\n        a.download = nombreArchivo;\r\n        document.body.appendChild(a);\r\n        a.click();\r\n        URL.revokeObjectURL(url);\r\n    };\r\n\r\n    return (\r\n        <div className=\"papu\">\r\n            <header className=\"messi\">\r\n                <h1>CIFRADO DES</h1>\r\n                <h3>Ayala Gomez NIcolas IÃ±aki</h3>\r\n                <h3>Carlos Emilio Manzano Solis</h3>\r\n            </header>\r\n\r\n            <div className=\"nico\">\r\n                <form>\r\n                    <p>Selecciona un archivo de texto:</p>\r\n                    <input type=\"file\" id=\"archivodes\" onChange={leerDes} className=\"carlos\" />\r\n                    <p>Ingresar clave:</p>\r\n                    <input\r\n                        type=\"password\"\r\n                        value={password}\r\n                        onChange={(e) => setPassword(e.target.value)}\r\n                        placeholder=\"Solo 8 caracteres!\"\r\n                        maxLength=\"8\"\r\n                        minLength=\"8\"\r\n                        className=\"pepe\"\r\n                    />\r\n                    <div className=\"botones\">\r\n                        <input\r\n                            className=\"form-control\"\r\n                            type=\"button\"\r\n                            id=\"button\"\r\n                            value=\"Cifrar\"\r\n                            onClick={cifraDes}\r\n                            style={{ marginRight: '1.5rem' }}\r\n                        />\r\n                        <input\r\n                            className=\"form-control\"\r\n                            type=\"button\"\r\n                            id=\"button\"\r\n                            value=\"Descifrar\"\r\n                            onClick={descifraDes}\r\n                            style={{ marginRight: '1.5rem' }}\r\n                        />\r\n                        <input type=\"reset\" id=\"button\" value=\"Limpiar\" />\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}