{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\carlo\\\\Downloads\\\\CodePills-ReactChat-main\\\\front\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport './App.css';\nimport { io } from 'socket.io-client';\nimport React, { useState, useEffect } from 'react';\nimport { LiMensaje, UlMensajes } from './ui-components';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst socket = io('http://localhost:3000');\nfunction App() {\n  _s();\n  const [isConnected, setIsConnected] = useState(false);\n  const [nuevoMensaje, setNuevoMensaje] = useState('');\n  const [mensajes, setMensajes] = useState([]);\n  const [file, setFile] = useState(null);\n  useEffect(() => {\n    socket.on('connect', () => setIsConnected(true));\n    socket.on('chat_message', data => {\n      setMensajes(mensajes => [...mensajes, data]);\n    });\n    return () => {\n      socket.off('connect');\n      socket.off('chat_message');\n    };\n  }, []);\n  const handleFileSelect = event => {\n    const file = event.target.files[0];\n    setFile(file);\n  };\n  const handleFileSubmit = () => {\n    if (file) {\n      const reader = new FileReader();\n      reader.onload = event => {\n        const fileData = event.target.result;\n        const fileName = file.name;\n        socket.emit('file_upload', {\n          file: fileData,\n          fileName\n        });\n      };\n      reader.readAsDataURL(file);\n    }\n  };\n  socket.on('file_uploaded', data => {\n    const downloadLink = document.createElement('a');\n    downloadLink.href = `data:text/plain;base64,${data.fileData}`;\n    downloadLink.download = data.fileName;\n    downloadLink.innerHTML = `Descargar ${data.fileName}`;\n    // Agrega el enlace al DOM o muestra una notificación para la descarga\n  });\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    const newMessage = {\n      body: nuevoMensaje,\n      from: \"Me\"\n    };\n    setMensajes(state => [...state, newMessage]);\n    setNuevoMensaje(\"\");\n    socket.emit(\"chat_message\", newMessage.body);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: isConnected ? 'CONECTADO' : 'NO CONECTADO'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(UlMensajes, {\n      children: mensajes.map((mensaje, i) => /*#__PURE__*/_jsxDEV(LiMensaje, {\n        isMe: mensaje.from === 'Me',\n        children: [mensaje.from, \": \", mensaje.body]\n      }, i, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      onChange: handleFileSelect\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleFileSubmit,\n      children: \"Enviar Archivo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: nuevoMensaje,\n      onChange: e => setNuevoMensaje(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSubmit,\n      children: \"Enviar Mensaje\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 9\n  }, this);\n}\n_s(App, \"QWG6ybqCEK0O4vFlrDjJLP+rFAs=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["io","React","useState","useEffect","LiMensaje","UlMensajes","socket","App","isConnected","setIsConnected","nuevoMensaje","setNuevoMensaje","mensajes","setMensajes","file","setFile","on","data","off","handleFileSelect","event","target","files","handleFileSubmit","reader","FileReader","onload","fileData","result","fileName","name","emit","readAsDataURL","downloadLink","document","createElement","href","download","innerHTML","handleSubmit","preventDefault","newMessage","body","from","state","map","mensaje","i","e","value"],"sources":["C:/Users/carlo/Downloads/CodePills-ReactChat-main/front/src/App.js"],"sourcesContent":["import './App.css';\nimport { io } from 'socket.io-client';\nimport React, { useState, useEffect } from 'react';\nimport { LiMensaje, UlMensajes } from './ui-components';\n\nconst socket = io('http://localhost:3000');\n\nfunction App() {\n    const [isConnected, setIsConnected] = useState(false);\n    const [nuevoMensaje, setNuevoMensaje] = useState('');\n    const [mensajes, setMensajes] = useState([]);\n    const [file, setFile] = useState(null);\n\n    useEffect(() => {\n        socket.on('connect', () => setIsConnected(true));\n        socket.on('chat_message', (data) => {\n            setMensajes(mensajes => [...mensajes, data]);\n        });\n\n        return () => {\n            socket.off('connect');\n            socket.off('chat_message');\n        }\n    }, []);\n\n    const handleFileSelect = (event) => {\n        const file = event.target.files[0];\n        setFile(file);\n    };\n\n    const handleFileSubmit = () => {\n        if (file) {\n            const reader = new FileReader();\n            reader.onload = (event) => {\n                const fileData = event.target.result;\n                const fileName = file.name;\n                socket.emit('file_upload', { file: fileData, fileName });\n            };\n            reader.readAsDataURL(file);\n        }\n    };\n\n    socket.on('file_uploaded', (data) => {\n        const downloadLink = document.createElement('a');\n        downloadLink.href = `data:text/plain;base64,${data.fileData}`;\n        downloadLink.download = data.fileName;\n        downloadLink.innerHTML = `Descargar ${data.fileName}`;\n        // Agrega el enlace al DOM o muestra una notificación para la descarga\n    });\n\n    const handleSubmit = (event) => {\n        event.preventDefault();\n        const newMessage = {\n            body: nuevoMensaje,\n            from: \"Me\",\n        };\n        setMensajes(state => [...state, newMessage]);\n        setNuevoMensaje(\"\");\n        socket.emit(\"chat_message\", newMessage.body);\n    };\n\n    return (\n        <div className=\"App\">\n            <h2>{isConnected ? 'CONECTADO' : 'NO CONECTADO'}</h2>\n            <UlMensajes>\n                {mensajes.map((mensaje, i) => (\n                    <LiMensaje key={i} isMe={mensaje.from === 'Me'}>{mensaje.from}: {mensaje.body}</LiMensaje>\n                ))}\n            </UlMensajes>\n            <input\n                type=\"file\"\n                onChange={handleFileSelect}\n            />\n            <button onClick={handleFileSubmit}>Enviar Archivo</button>\n            <input\n                type=\"text\"\n                value={nuevoMensaje}\n                onChange={e => setNuevoMensaje(e.target.value)}\n            />\n            <button onClick={handleSubmit}>Enviar Mensaje</button>\n        </div>\n    );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}