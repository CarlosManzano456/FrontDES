{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\carlo\\\\Downloads\\\\CodePills-ReactChat-main\\\\front\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport './App.css';\nimport { io } from 'socket.io-client';\nimport { useState, useEffect } from 'react';\nimport { LiMensaje, UlMensajes } from './ui-components';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst socket = io('http://localhost:3000');\nfunction App() {\n  _s();\n  const [isConnected, setIsConnected] = useState(false);\n  const [nuevoMensaje, setNuevoMensaje] = useState('');\n  const [mensajes, setMensajes] = useState([]);\n  const [miNombre, setMiNombre] = useState(''); // Agrega el estado para el nombre de usuario\n\n  useEffect(() => {\n    socket.on('connect', () => {\n      setIsConnected(true);\n      socket.emit('set_username', miNombre); // Envía el nombre de usuario al servidor\n    });\n\n    socket.on('chat_message', data => {\n      setMensajes(mensajes => [...mensajes, data]);\n    });\n    return () => {\n      socket.off('connect');\n      socket.off('chat_message');\n    };\n  }, [miNombre]);\n  const enviarMensaje = () => {\n    socket.emit('chat_message', {\n      mensaje: nuevoMensaje\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: isConnected ? 'CONECTADO' : 'NO CONECTADO'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(UlMensajes, {\n      children: mensajes.map((mensaje, index) => /*#__PURE__*/_jsxDEV(LiMensaje, {\n        children: [mensaje.usuario === miNombre ? 'ME' : mensaje.usuario, \":\", mensaje.mensaje]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      onChange: e => setNuevoMensaje(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: enviarMensaje,\n      children: \"Enviar\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Nombre de usuario\",\n      onChange: e => setMiNombre(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"MfPWxZzvq8AnMnw+11KhHvmE3Ak=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["io","useState","useEffect","LiMensaje","UlMensajes","socket","App","isConnected","setIsConnected","nuevoMensaje","setNuevoMensaje","mensajes","setMensajes","miNombre","setMiNombre","on","emit","data","off","enviarMensaje","mensaje","map","index","usuario","e","target","value"],"sources":["C:/Users/carlo/Downloads/CodePills-ReactChat-main/front/src/App.js"],"sourcesContent":["import './App.css';\nimport { io } from 'socket.io-client';\nimport { useState, useEffect } from 'react';\nimport { LiMensaje, UlMensajes } from './ui-components';\n\nconst socket = io('http://localhost:3000');\n\nfunction App() {\n  const [isConnected, setIsConnected] = useState(false);\n  const [nuevoMensaje, setNuevoMensaje] = useState('');\n  const [mensajes, setMensajes] = useState([]);\n  const [miNombre, setMiNombre] = useState(''); // Agrega el estado para el nombre de usuario\n\n  useEffect(() => {\n    socket.on('connect', () => {\n      setIsConnected(true);\n      socket.emit('set_username', miNombre); // Envía el nombre de usuario al servidor\n    });\n\n    socket.on('chat_message', (data) => {\n      setMensajes((mensajes) => [...mensajes, data]);\n    });\n\n    return () => {\n      socket.off('connect');\n      socket.off('chat_message');\n    };\n  }, [miNombre]);\n\n  const enviarMensaje = () => {\n    socket.emit('chat_message', {\n      mensaje: nuevoMensaje\n    });\n  };\n\n  return (\n    <div className=\"App\">\n      <h2>{isConnected ? 'CONECTADO' : 'NO CONECTADO'}</h2>\n      <UlMensajes>\n        {mensajes.map((mensaje, index) => (\n          <LiMensaje key={index}>\n            {mensaje.usuario === miNombre ? 'ME' : mensaje.usuario}:\n            {mensaje.mensaje}\n          </LiMensaje>\n        ))}\n      </UlMensajes>\n      <input\n        type=\"text\"\n        onChange={(e) => setNuevoMensaje(e.target.value)}\n      />\n      <button onClick={enviarMensaje}>Enviar</button>\n      <input\n        type=\"text\"\n        placeholder=\"Nombre de usuario\"\n        onChange={(e) => setMiNombre(e.target.value)}\n      />\n    </div>\n  );\n}\n\nexport default App;\n\n"],"mappings":";;AAAA,OAAO,WAAW;AAClB,SAASA,EAAE,QAAQ,kBAAkB;AACrC,SAASC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,SAASC,SAAS,EAAEC,UAAU,QAAQ,iBAAiB;AAAC;AAExD,MAAMC,MAAM,GAAGL,EAAE,CAAC,uBAAuB,CAAC;AAE1C,SAASM,GAAG,GAAG;EAAA;EACb,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGP,QAAQ,CAAC,KAAK,CAAC;EACrD,MAAM,CAACQ,YAAY,EAAEC,eAAe,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EACpD,MAAM,CAACU,QAAQ,EAAEC,WAAW,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACY,QAAQ,EAAEC,WAAW,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;;EAE9CC,SAAS,CAAC,MAAM;IACdG,MAAM,CAACU,EAAE,CAAC,SAAS,EAAE,MAAM;MACzBP,cAAc,CAAC,IAAI,CAAC;MACpBH,MAAM,CAACW,IAAI,CAAC,cAAc,EAAEH,QAAQ,CAAC,CAAC,CAAC;IACzC,CAAC,CAAC;;IAEFR,MAAM,CAACU,EAAE,CAAC,cAAc,EAAGE,IAAI,IAAK;MAClCL,WAAW,CAAED,QAAQ,IAAK,CAAC,GAAGA,QAAQ,EAAEM,IAAI,CAAC,CAAC;IAChD,CAAC,CAAC;IAEF,OAAO,MAAM;MACXZ,MAAM,CAACa,GAAG,CAAC,SAAS,CAAC;MACrBb,MAAM,CAACa,GAAG,CAAC,cAAc,CAAC;IAC5B,CAAC;EACH,CAAC,EAAE,CAACL,QAAQ,CAAC,CAAC;EAEd,MAAMM,aAAa,GAAG,MAAM;IAC1Bd,MAAM,CAACW,IAAI,CAAC,cAAc,EAAE;MAC1BI,OAAO,EAAEX;IACX,CAAC,CAAC;EACJ,CAAC;EAED,oBACE;IAAK,SAAS,EAAC,KAAK;IAAA,wBAClB;MAAA,UAAKF,WAAW,GAAG,WAAW,GAAG;IAAc;MAAA;MAAA;MAAA;IAAA,QAAM,eACrD,QAAC,UAAU;MAAA,UACRI,QAAQ,CAACU,GAAG,CAAC,CAACD,OAAO,EAAEE,KAAK,kBAC3B,QAAC,SAAS;QAAA,WACPF,OAAO,CAACG,OAAO,KAAKV,QAAQ,GAAG,IAAI,GAAGO,OAAO,CAACG,OAAO,EAAC,GACvD,EAACH,OAAO,CAACA,OAAO;MAAA,GAFFE,KAAK;QAAA;QAAA;QAAA;MAAA,QAItB;IAAC;MAAA;MAAA;MAAA;IAAA,QACS,eACb;MACE,IAAI,EAAC,MAAM;MACX,QAAQ,EAAGE,CAAC,IAAKd,eAAe,CAACc,CAAC,CAACC,MAAM,CAACC,KAAK;IAAE;MAAA;MAAA;MAAA;IAAA,QACjD,eACF;MAAQ,OAAO,EAAEP,aAAc;MAAA,UAAC;IAAM;MAAA;MAAA;MAAA;IAAA,QAAS,eAC/C;MACE,IAAI,EAAC,MAAM;MACX,WAAW,EAAC,mBAAmB;MAC/B,QAAQ,EAAGK,CAAC,IAAKV,WAAW,CAACU,CAAC,CAACC,MAAM,CAACC,KAAK;IAAE;MAAA;MAAA;MAAA;IAAA,QAC7C;EAAA;IAAA;IAAA;IAAA;EAAA,QACE;AAEV;AAAC,GAnDQpB,GAAG;AAAA,KAAHA,GAAG;AAqDZ,eAAeA,GAAG;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}